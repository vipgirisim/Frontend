{"version":3,"sources":["variables/charts.js","assets/img/emilyz.jpg","services/auth.service.js","components/login.component.js","components/register.component.js","services/auth-header.js","services/user.service.js","components/home.component.js","components/profile.component.js","components/board-user.component.js","components/board-moderator.component.js","assets/bg1.jpg","assets/logo.svg","components/Navbars/AdminNavbar.js","components/Footer/Footer.js","components/sidebar/Sidebar.js","contexts/BackgroundColorContext.js","components/FixedPlugin/FixedPlugin.js","views/Dashboard.js","views/Map.js","views/Notifications.js","views/TableList.js","views/Typography.js","views/UserProfile.js","layouts/Admin/Admin.js","routes.js","assets/img/react-logo.png","components/Layout.js","components/messages.js","components/board-admin.component.js","components/board-unlu.component.js","App.js","serviceWorker.js","index.js"],"names":["chart1_2_options","maintainAspectRatio","legend","display","tooltips","backgroundColor","titleFontColor","bodyFontColor","bodySpacing","xPadding","mode","intersect","position","responsive","scales","yAxes","barPercentage","gridLines","drawBorder","color","zeroLineColor","ticks","suggestedMin","suggestedMax","padding","fontColor","xAxes","chartExample1","data1","canvas","gradientStroke","getContext","createLinearGradient","addColorStop","labels","datasets","label","fill","borderColor","borderWidth","borderDash","borderDashOffset","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","data","data2","data3","options","chartExample2","module","exports","chartExample3","hoverBackgroundColor","chartExample4","API_URL","username","password","axios","post","then","response","accessToken","localStorage","setItem","JSON","stringify","removeItem","email","parse","getItem","required","value","className","role","Login","props","handleLogin","bind","onChangeUsername","onChangePassword","state","loading","message","e","this","setState","target","preventDefault","form","validateAll","checkBtn","context","_errors","length","AuthService","login","history","push","window","location","reload","error","resMessage","toString","src","alt","onSubmit","ref","c","htmlFor","type","name","onChange","validations","disabled","style","Component","isEmail","vusername","vpassword","Register","handleRegister","onChangeEmail","successful","register","authHeader","user","require","method","url","headers","get","Home","content","UserService","getPublicContent","Profile","redirect","userReady","currentUser","getCurrentUser","to","substring","substr","id","roles","map","index","BoardUser","getUserBoard","BoardModerator","getModeratorBoard","AdminNavbar","React","useState","collapseOpen","setcollapseOpen","modalSearch","setmodalSearch","setcolor","useEffect","addEventListener","updateColor","removeEventListener","innerWidth","toggleModalSearch","Navbar","classNames","expand","Container","fluid","toggled","sidebarOpened","NavbarToggler","onClick","toggleSidebar","Collapse","navbar","isOpen","Modal","modalClassName","toggle","ModalHeader","Input","placeholder","aria-label","Footer","ps","Nav","NavItem","Date","getFullYear","href","BackgroundColorContext","createContext","changeColor","Sidebar","useLocation","sidebarRef","useRef","navigator","platform","indexOf","PerfectScrollbar","current","suppressScrollX","suppressScrollY","destroy","routes","rtlActive","logo","logoImg","logoText","undefined","outterLink","imgSrc","text","innerLink","Consumer","prop","key","routeName","path","pathname","pro","layout","activeClassName","icon","rtlName","defaultProps","FixedPlugin","Dashboard","bigChartData","setbigChartData","setBgChartData","Row","Col","xs","Card","CardHeader","sm","CardTitle","tag","ButtonGroup","data-toggle","Button","active","size","CardBody","lg","md","UncontrolledDropdown","DropdownToggle","caret","DropdownMenu","aria-labelledby","right","DropdownItem","Table","FormGroup","check","Label","defaultValue","title","UncontrolledTooltip","delay","placement","defaultChecked","Map","Notifications","notificationAlertRef","notify","place","Math","floor","random","autoDismiss","notificationAlert","Alert","UncontrolledAlert","data-notify","block","Tables","Typography","UserProfile","Form","cols","rows","CardFooter","CardText","default","component","TableList","Admin","mainPanelRef","document","documentElement","setsidebarOpened","classList","remove","tables","querySelectorAll","i","add","scrollTop","scrollingElement","getBrandText","Fragment","brandText","from","bgColor","handleBgClick","Layout","setLocale","rtl","ar","sidebarTitle","description","dashboard","components","dropdown","submenu","multiLevel","collapsed","image","new","withPrefix","withSuffix","viewSource","en","BoardAdmin","locale","messages","BoardUnlu","App","logOut","showModeratorBoard","showAdminBoard","includes","logout","exact","Boolean","hostname","match","ReactDOM","render","getElementById","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.2c58d5d8.chunk.js","sourcesContent":["\nlet chart1_2_options = {\n  maintainAspectRatio: false,\n  legend: {\n    display: false,\n  },\n  tooltips: {\n    backgroundColor: \"#f5f5f5\",\n    titleFontColor: \"#333\",\n    bodyFontColor: \"#666\",\n    bodySpacing: 4,\n    xPadding: 12,\n    mode: \"nearest\",\n    intersect: 0,\n    position: \"nearest\",\n  },\n  responsive: true,\n  scales: {\n    yAxes: [\n      {\n        barPercentage: 1.6,\n        gridLines: {\n          drawBorder: false,\n          color: \"rgba(29,140,248,0.0)\",\n          zeroLineColor: \"transparent\",\n        },\n        ticks: {\n          suggestedMin: 60,\n          suggestedMax: 125,\n          padding: 20,\n          fontColor: \"#9a9a9a\",\n        },\n      },\n    ],\n    xAxes: [\n      {\n        barPercentage: 1.6,\n        gridLines: {\n          drawBorder: false,\n          color: \"rgba(29,140,248,0.1)\",\n          zeroLineColor: \"transparent\",\n        },\n        ticks: {\n          padding: 20,\n          fontColor: \"#9a9a9a\",\n        },\n      },\n    ],\n  },\n}; \nlet chartExample1 = {\n  data1: (canvas) => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n\n    return {\n      labels: [\n        \"JAN\",\n        \"FEB\",\n        \"MAR\",\n        \"APR\",\n        \"MAY\",\n        \"JUN\",\n        \"JUL\",\n        \"AUG\",\n        \"SEP\",\n        \"OCT\",\n        \"NOV\",\n        \"DEC\",\n      ],\n      datasets: [\n        {\n          label: \"My First dataset\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: \"#1f8ef1\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: \"#1f8ef1\",\n          pointBorderColor: \"rgba(255,255,255,0)\",\n          pointHoverBackgroundColor: \"#1f8ef1\",\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 4,\n          data: [100, 70, 90, 70, 85, 60, 75, 60, 90, 80, 110, 100],\n        },\n      ],\n    };\n  },\n  data2: (canvas) => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n\n    return {\n      labels: [\n        \"JAN\",\n        \"FEB\",\n        \"MAR\",\n        \"APR\",\n        \"MAY\",\n        \"JUN\",\n        \"JUL\",\n        \"AUG\",\n        \"SEP\",\n        \"OCT\",\n        \"NOV\",\n        \"DEC\",\n      ],\n      datasets: [\n        {\n          label: \"My First dataset\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: \"#1f8ef1\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: \"#1f8ef1\",\n          pointBorderColor: \"rgba(255,255,255,0)\",\n          pointHoverBackgroundColor: \"#1f8ef1\",\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 4,\n          data: [80, 120, 105, 110, 95, 105, 90, 100, 80, 95, 70, 120],\n        },\n      ],\n    };\n  },\n  data3: (canvas) => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n\n    return {\n      labels: [\n        \"JAN\",\n        \"FEB\",\n        \"MAR\",\n        \"APR\",\n        \"MAY\",\n        \"JUN\",\n        \"JUL\",\n        \"AUG\",\n        \"SEP\",\n        \"OCT\",\n        \"NOV\",\n        \"DEC\",\n      ],\n      datasets: [\n        {\n          label: \"My First dataset\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: \"#1f8ef1\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: \"#1f8ef1\",\n          pointBorderColor: \"rgba(255,255,255,0)\",\n          pointHoverBackgroundColor: \"#1f8ef1\",\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 4,\n          data: [60, 80, 65, 130, 80, 105, 90, 130, 70, 115, 60, 130],\n        },\n      ],\n    };\n  },\n  options: chart1_2_options,\n};\n\n// #########################################\n// // // used inside src/views/Dashboard.js\n// #########################################\nlet chartExample2 = {\n  data: (canvas) => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n\n    return {\n      labels: [\"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"],\n      datasets: [\n        {\n          label: \"Data\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: \"#1f8ef1\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: \"#1f8ef1\",\n          pointBorderColor: \"rgba(255,255,255,0)\",\n          pointHoverBackgroundColor: \"#1f8ef1\",\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 4,\n          data: [80, 100, 70, 80, 120, 80],\n        },\n      ],\n    };\n  },\n  options: chart1_2_options,\n};\n\n// #########################################\n// // // used inside src/views/Dashboard.js\n// #########################################\nlet chartExample3 = {\n  data: (canvas) => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(72,72,176,0.1)\");\n    gradientStroke.addColorStop(0.4, \"rgba(72,72,176,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(119,52,169,0)\"); //purple colors\n\n    return {\n      labels: [\"USA\", \"GER\", \"AUS\", \"UK\", \"RO\", \"BR\"],\n      datasets: [\n        {\n          label: \"Countries\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          hoverBackgroundColor: gradientStroke,\n          borderColor: \"#d048b6\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          data: [53, 20, 10, 80, 100, 45],\n        },\n      ],\n    };\n  },\n  options: {\n    maintainAspectRatio: false,\n    legend: {\n      display: false,\n    },\n    tooltips: {\n      backgroundColor: \"#f5f5f5\",\n      titleFontColor: \"#333\",\n      bodyFontColor: \"#666\",\n      bodySpacing: 4,\n      xPadding: 12,\n      mode: \"nearest\",\n      intersect: 0,\n      position: \"nearest\",\n    },\n    responsive: true,\n    scales: {\n      yAxes: [\n        {\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(225,78,202,0.1)\",\n            zeroLineColor: \"transparent\",\n          },\n          ticks: {\n            suggestedMin: 60,\n            suggestedMax: 120,\n            padding: 20,\n            fontColor: \"#9e9e9e\",\n          },\n        },\n      ],\n      xAxes: [\n        {\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(225,78,202,0.1)\",\n            zeroLineColor: \"transparent\",\n          },\n          ticks: {\n            padding: 20,\n            fontColor: \"#9e9e9e\",\n          },\n        },\n      ],\n    },\n  },\n};\n\n// #########################################\n// // // used inside src/views/Dashboard.js\n// #########################################\nconst chartExample4 = {\n  data: (canvas) => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(66,134,121,0.15)\");\n    gradientStroke.addColorStop(0.4, \"rgba(66,134,121,0.0)\"); //green colors\n    gradientStroke.addColorStop(0, \"rgba(66,134,121,0)\"); //green colors\n\n    return {\n      labels: [\"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\"],\n      datasets: [\n        {\n          label: \"My First dataset\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: \"#00d6b4\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: \"#00d6b4\",\n          pointBorderColor: \"rgba(255,255,255,0)\",\n          pointHoverBackgroundColor: \"#00d6b4\",\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 4,\n          data: [90, 27, 60, 12, 80],\n        },\n      ],\n    };\n  },\n  options: {\n    maintainAspectRatio: false,\n    legend: {\n      display: false,\n    },\n\n    tooltips: {\n      backgroundColor: \"#f5f5f5\",\n      titleFontColor: \"#333\",\n      bodyFontColor: \"#666\",\n      bodySpacing: 4,\n      xPadding: 12,\n      mode: \"nearest\",\n      intersect: 0,\n      position: \"nearest\",\n    },\n    responsive: true,\n    scales: {\n      yAxes: [\n        {\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(29,140,248,0.0)\",\n            zeroLineColor: \"transparent\",\n          },\n          ticks: {\n            suggestedMin: 50,\n            suggestedMax: 125,\n            padding: 20,\n            fontColor: \"#9e9e9e\",\n          },\n        },\n      ],\n\n      xAxes: [\n        {\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(0,242,195,0.1)\",\n            zeroLineColor: \"transparent\",\n          },\n          ticks: {\n            padding: 20,\n            fontColor: \"#9e9e9e\",\n          },\n        },\n      ],\n    },\n  },\n};\n\nmodule.exports = {\n  chartExample1, // in src/views/Dashboard.js\n  chartExample2, // in src/views/Dashboard.js\n  chartExample3, // in src/views/Dashboard.js\n  chartExample4, // in src/views/Dashboard.js\n};\n","export default __webpack_public_path__ + \"static/media/emilyz.105ff23d.jpg\";","import axios from \"axios\";\n\nconst API_URL = \"https://vipfal.herokuapp.com/api/auth/\";\n\nclass AuthService {\n  login(username, password) {\n    return axios\n      .post(API_URL + \"signin\", {\n        username,\n        password\n      })\n      .then(response => {\n        if (response.data.accessToken) {\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\n        }\n\n        return response.data;\n      });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  register(username, email, password) {\n    return axios.post(API_URL + \"signup\", {\n      username,\n      email,\n      password\n    });\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));;\n  }\n}\n\nexport default new AuthService();\n","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\nimport AuthService from \"../services/auth.service\";\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      loading: false,\n      message: \"\"\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleLogin(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      loading: true\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.login(this.state.username, this.state.password).then(\n        () => {\n          this.props.history.push(\"/profile\");\n          window.location.reload();\n        },\n        error => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            loading: false,\n            message: resMessage\n          });\n        }\n      );\n    } else {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container\">\n          <img\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n            alt=\"profile-img\"\n            className=\"profile-img-card\"\n          />\n\n          <Form\n            onSubmit={this.handleLogin}\n            ref={c => {\n              this.form = c;\n            }}\n          >\n            <div className=\"form-group\">\n              <label htmlFor=\"username\">Adı Soyadı</label>\n              <Input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={this.onChangeUsername}\n                validations={[required]}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Şifre</label>\n              <Input\n                type=\"password\"\n                className=\"form-control\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.onChangePassword}\n                validations={[required]}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <button\n                className=\"btn btn-primary btn-block\"\n                disabled={this.state.loading}\n              >\n                {this.state.loading && (\n                  <span className=\"spinner-border spinner-border-sm\"></span>\n                )}\n                <span>Giriş</span>\n              </button>\n            </div>\n\n            {this.state.message && (\n              <div className=\"form-group\">\n                <div className=\"alert alert-danger\" role=\"alert\">\n                  {this.state.message}\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={c => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\n\nimport AuthService from \"../services/auth.service\";\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst email = value => {\n  if (!isEmail(value)) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This is not a valid email.\n      </div>\n    );\n  }\n};\n\nconst vusername = value => {\n  if (value.length < 3 || value.length > 20) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The username must be between 3 and 20 characters.\n      </div>\n    );\n  }\n};\n\nconst vpassword = value => {\n  if (value.length < 6 || value.length > 40) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The password must be between 6 and 40 characters.\n      </div>\n    );\n  }\n};\n\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      successful: false,\n      message: \"\"\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleRegister(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      successful: false\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.register(\n        this.state.username,\n        this.state.email,\n        this.state.password\n      ).then(\n        response => {\n          this.setState({\n            message: response.data.message,\n            successful: true\n          });\n        },\n        error => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            successful: false,\n            message: resMessage\n          });\n        }\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container\">\n          <img\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n            alt=\"profile-img\"\n            className=\"profile-img-card\"\n          />\n\n          <Form\n            onSubmit={this.handleRegister}\n            ref={c => {\n              this.form = c;\n            }}\n          >\n            {!this.state.successful && (\n              <div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"username\">Adı soyadı</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChangeUsername}\n                    validations={[required, vusername]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"email\"\n                    value={this.state.email}\n                    onChange={this.onChangeEmail}\n                    validations={[required, email]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Şifre</label>\n                  <Input\n                    type=\"password\"\n                    className=\"form-control\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChangePassword}\n                    validations={[required, vpassword]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <button className=\"btn btn-primary btn-block\">Kayıt</button>\n                </div>\n              </div>\n            )}\n\n            {this.state.message && (\n              <div className=\"form-group\">\n                <div\n                  className={\n                    this.state.successful\n                      ? \"alert alert-success\"\n                      : \"alert alert-danger\"\n                  }\n                  role=\"alert\"\n                >\n                  {this.state.message}\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={c => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n","export default function authHeader() {\n  const user = JSON.parse(localStorage.getItem('user'));\n\n  if (user && user.accessToken) {\n    // return { Authorization: 'Bearer ' + user.accessToken }; // for Spring Boot back-end\n    return { 'x-access-token': user.accessToken };       // for Node.js Express back-end\n  } else {\n    return {};\n  }\n}\n","import axios from 'axios';\nimport authHeader from './auth-header';\n\nconst API_URL = 'https://vipfal.herokuapp.com/api/test/';\n\nclass UserService {\n  \n  getPublicContent() {\n    const axios = require('axios');\n    let config = {\n      method: 'get',\n      url: 'https://vipfal.herokuapp.com/api/test/all',\n      headers: {}\n    }; \n    return axios(config);\n  }\n\n  getUserBoard() {\n    return axios.get(API_URL + 'user', { headers: authHeader() });\n  }\n\n  getModeratorBoard() {\n    return axios.get(API_URL + 'mod', { headers: authHeader() });\n  }\n\n  getAdminBoard() {\n    return axios.get(API_URL + 'admin', { headers: authHeader() });\n  }\n}\n\nexport default new UserService();\n","import React, { Component } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\n\r\nexport default class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getPublicContent().then(\r\n      response => {\r\n        this.setState({\r\n          content: response.data\r\n        });\r\n      },\r\n      error => {\r\n        this.setState({\r\n          content:\r\n            (error.response && error.response.data) ||\r\n            error.message || \r\n            error.toString()\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>{this.state.content}</h3>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport AuthService from \"../services/auth.service\";\n\nexport default class Profile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      redirect: null,\n      userReady: false,\n      currentUser: { username: \"\" }\n    };\n  }\n\n  componentDidMount() {\n    const currentUser = AuthService.getCurrentUser();\n\n    if (!currentUser) this.setState({ redirect: \"/home\" });\n    this.setState({ currentUser: currentUser, userReady: true })\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to={this.state.redirect} />\n    }\n\n    const { currentUser } = this.state;\n\n    return (\n      <div className=\"container\">\n        {(this.state.userReady) ?\n        <div>\n        <header className=\"jumbotron\">\n          <h3>\n            <strong>{currentUser.username}</strong> Hesap\n          </h3>\n        </header>\n        <p>\n          <strong>Token:</strong>{\" \"}\n          {currentUser.accessToken.substring(0, 20)} ...{\" \"}\n          {currentUser.accessToken.substr(currentUser.accessToken.length - 20)}\n        </p>\n        <p>\n          <strong>Id:</strong>{\" \"}\n          {currentUser.id}\n        </p>\n        <p>\n          <strong>Mail:</strong>{\" \"}\n          {currentUser.email}\n        </p>\n        <strong>Yetkilendirme:</strong>\n        <ul>\n          {currentUser.roles &&\n            currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\n        </ul>\n      </div>: null}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nexport default class BoardUser extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getUserBoard().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nexport default class BoardModerator extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getModeratorBoard().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}\n","export default __webpack_public_path__ + \"static/media/bg1.93d19a24.jpg\";","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n\n// reactstrap components\nimport {\n  Button,\n  Collapse,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  Input,\n  InputGroup,\n  NavbarBrand,\n  Navbar,\n  NavLink,\n  Nav,\n  Container,\n  Modal,\n  NavbarToggler,\n  ModalHeader,\n} from \"reactstrap\";\n\nfunction AdminNavbar(props) {\n  const [collapseOpen, setcollapseOpen] = React.useState(false);\n  const [modalSearch, setmodalSearch] = React.useState(false);\n  const [color, setcolor] = React.useState(\"navbar-transparent\");\n  React.useEffect(() => {\n    window.addEventListener(\"resize\", updateColor);\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      window.removeEventListener(\"resize\", updateColor);\n    };\n  });\n  // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n  const updateColor = () => {\n    if (window.innerWidth < 993 && collapseOpen) {\n      setcolor(\"bg-white\");\n    } else {\n      setcolor(\"navbar-transparent\");\n    }\n  };\n  // this function opens and closes the collapse on small devices\n  const toggleCollapse = () => {\n    if (collapseOpen) {\n      setcolor(\"navbar-transparent\");\n    } else {\n      setcolor(\"bg-white\");\n    }\n    setcollapseOpen(!collapseOpen);\n  };\n  // this function is to open the Search modal\n  const toggleModalSearch = () => {\n    setmodalSearch(!modalSearch);\n  };\n  return (\n    <>\n      <Navbar className={classNames(\"navbar-absolute\", color)} expand=\"lg\">\n        <Container fluid>\n          <div className=\"navbar-wrapper\">\n            <div\n              className={classNames(\"navbar-toggle d-inline\", {\n                toggled: props.sidebarOpened,\n              })}\n            >\n              <NavbarToggler onClick={props.toggleSidebar}>\n                <span className=\"navbar-toggler-bar bar1\" />\n                <span className=\"navbar-toggler-bar bar2\" />\n                <span className=\"navbar-toggler-bar bar3\" />\n              </NavbarToggler>\n            </div>\n            \n          </div>\n          <NavbarToggler onClick={toggleCollapse}>\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n          </NavbarToggler>\n          <Collapse navbar isOpen={collapseOpen}>\n          </Collapse>\n        </Container>\n      </Navbar>\n      <Modal\n        modalClassName=\"modal-search\"\n        isOpen={modalSearch}\n        toggle={toggleModalSearch}\n      >\n        <ModalHeader>\n          <Input placeholder=\"SEARCH\" type=\"text\" />\n          <button\n            aria-label=\"Close\"\n            className=\"close\"\n            onClick={toggleModalSearch}\n          >\n            <i className=\"tim-icons icon-simple-remove\" />\n          </button>\n        </ModalHeader>\n      </Modal>\n    </>\n  );\n}\n\nexport default AdminNavbar;\n","/*!\n\n=========================================================\n* Black Dashboard React v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\nimport React from \"react\";\n\n// reactstrap components\nimport { Container, Nav, NavItem, NavLink } from \"reactstrap\";\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <Container fluid>\n        <Nav>\n          <NavItem>\n            \n          </NavItem> \n        </Nav>\n        <div className=\"copyright\">\n          © {new Date().getFullYear()} made with{\" \"}\n          <i className=\"tim-icons icon-heart-2\" /> by{\" \"}\n          <a\n            href=\"https://www.creative-tim.com/?ref=bdr-user-archive-footer\"\n            target=\"_blank\"\n          >\n            Creative Tim\n          </a>{\" \"}\n          for a better web.\n        </div>\n      </Container>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport { NavLink, Link, useLocation } from \"react-router-dom\";\n// nodejs library to set properties for components\nimport { PropTypes } from \"prop-types\";\n\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\n// reactstrap components\nimport { Nav, NavLink as ReactstrapNavLink } from \"reactstrap\";\nimport {\n  BackgroundColorContext,\n  backgroundColors,\n} from \"../../../src/contexts/BackgroundColorContext\";\n\nvar ps;\n\nfunction Sidebar(props) {\n  const location = useLocation();\n  const sidebarRef = React.useRef(null);\n  // verifies if routeName is the one active (in browser input)\n  const activeRoute = (routeName) => {\n    return location.pathname === routeName ? \"active\" : \"\";\n  };\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(sidebarRef.current, {\n        suppressScrollX: true,\n        suppressScrollY: false,\n      });\n    }\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n      }\n    };\n  });\n  const linkOnClick = () => {\n    document.documentElement.classList.remove(\"nav-open\");\n  };\n  const { routes, rtlActive, logo } = props;\n  let logoImg = null;\n  let logoText = null;\n  if (logo !== undefined) {\n    if (logo.outterLink !== undefined) {\n      logoImg = (\n        <a\n          href={logo.outterLink}\n          className=\"simple-text logo-mini\"\n          target=\"_blank\"\n          onClick={props.toggleSidebar}\n        >\n          <div className=\"logo-img\">\n            <img src={logo.imgSrc} alt=\"react-logo\" />\n          </div>\n        </a>\n      );\n      logoText = (\n        <a\n          href={logo.outterLink}\n          className=\"simple-text logo-normal\"\n          target=\"_blank\"\n          onClick={props.toggleSidebar}\n        >\n          {logo.text}\n        </a>\n      );\n    } else {\n      logoImg = (\n        <Link\n          to={logo.innerLink}\n          className=\"simple-text logo-mini\"\n          onClick={props.toggleSidebar}\n        >\n          <div className=\"logo-img\">\n            <img src={logo.imgSrc} alt=\"react-logo\" />\n          </div>\n        </Link>\n      );\n      logoText = (\n        <Link\n          to={logo.innerLink}\n          className=\"simple-text logo-normal\"\n          onClick={props.toggleSidebar}\n        >\n          {logo.text}\n        </Link>\n      );\n    }\n  }\n  return (\n    <BackgroundColorContext.Consumer>\n      {({ color }) => (\n        <div className=\"sidebar\" data={color}>\n          <div className=\"sidebar-wrapper\" ref={sidebarRef}>\n            {logoImg !== null || logoText !== null ? (\n              <div className=\"logo\">\n                {logoImg}\n                {logoText}\n              </div>\n            ) : null}\n            <Nav>\n              {routes.map((prop, key) => {\n                if (prop.redirect) return null;\n                return (\n                  <li\n                    className={\n                      activeRoute(prop.path) + (prop.pro ? \" active-pro\" : \"\")\n                    }\n                    key={key}\n                  >\n                    <NavLink\n                      to={prop.layout + prop.path}\n                      className=\"nav-link\"\n                      activeClassName=\"active\"\n                      onClick={props.toggleSidebar}\n                    >\n                      <i className={prop.icon} />\n                      <p>{rtlActive ? prop.rtlName : prop.name}</p>\n                    </NavLink>\n                  </li>\n                );\n              })}\n              <li className=\"active-pro\">\n                <ReactstrapNavLink href=\"https://www.creative-tim.com/product/black-dashboard-pro-react?ref=bdr-user-archive-sidebar-upgrade-pro\">\n                  <i className=\"tim-icons icon-spaceship\" />\n                  <p>Upgrade to PRO</p>\n                </ReactstrapNavLink>\n              </li>\n            </Nav>\n          </div>\n        </div>\n      )}\n    </BackgroundColorContext.Consumer>\n  );\n}\n\nSidebar.defaultProps = {\n  rtlActive: false,\n  routes: [{}],\n};\n\nSidebar.propTypes = {\n  // if true, then instead of the routes[i].name, routes[i].rtlName will be rendered\n  // insde the links of this component\n  rtlActive: PropTypes.bool,\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the text of the logo\n    text: PropTypes.node,\n    // the image src of the logo\n    imgSrc: PropTypes.string,\n  }),\n};\n\nexport default Sidebar;\n","import { createContext } from \"react\";\n\nexport const backgroundColors = {\n  primary: \"primary\",\n  blue: \"blue\",\n  green: \"green\",\n};\n\nexport const BackgroundColorContext = createContext({\n  color: backgroundColors.blue,\n  changeColor: (color) => {},\n});\n"," \nimport React from \"react\";\n\n// reactstrap components\nimport { Button, Dropdown, DropdownToggle, Badge } from \"reactstrap\";\nimport { ThemeContext, themes } from \"../../contexts/ThemeContext\";\nimport { backgroundColors } from \"../../contexts/BackgroundColorContext\";\n\nfunction FixedPlugin(props) {\n  const [dropDownIsOpen, setdropDownIsOpen] = React.useState(false);\n  const handleClick = () => {\n    setdropDownIsOpen(!dropDownIsOpen);\n  };\n  return (\n    <div className=\"fixed-plugin\"> \n      \n    </div>\n  );\n}\n\nexport default FixedPlugin;\n","\nimport React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// react plugin used to create charts\nimport { Line, Bar } from \"react-chartjs-2\";\n\n// reactstrap components\nimport {\n  Button,\n  ButtonGroup,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  Label,\n  FormGroup,\n  Input,\n  Table,\n  Row,\n  Col,\n  UncontrolledTooltip,\n} from \"reactstrap\";\n\n// core components\nimport {\n  chartExample1,\n  chartExample2,\n  chartExample3,\n  chartExample4,\n} from \"../../src/variables/charts\";\n\nfunction Dashboard(props) {\n  const [bigChartData, setbigChartData] = React.useState(\"data1\");\n  const setBgChartData = (name) => {\n    setbigChartData(name);\n  };\n  return (\n    <>\n      <div className=\"content\">\n        <Row>\n          <Col xs=\"12\">\n            <Card className=\"card-chart\">\n              <CardHeader>\n                <Row>\n                  <Col className=\"text-left\" sm=\"6\">\n                    <h5 className=\"card-category\">Total Shipments</h5>\n                    <CardTitle tag=\"h2\">Performance</CardTitle>\n                  </Col>\n                  <Col sm=\"6\">\n                    <ButtonGroup\n                      className=\"btn-group-toggle float-right\"\n                      data-toggle=\"buttons\"\n                    >\n                      <Button\n                        tag=\"label\"\n                        className={classNames(\"btn-simple\", {\n                          active: bigChartData === \"data1\",\n                        })}\n                        color=\"info\"\n                        id=\"0\"\n                        size=\"sm\"\n                        onClick={() => setBgChartData(\"data1\")}\n                      >\n                        <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                          Accounts\n                        </span>\n                        <span className=\"d-block d-sm-none\">\n                          <i className=\"tim-icons icon-single-02\" />\n                        </span>\n                      </Button>\n                      <Button\n                        color=\"info\"\n                        id=\"1\"\n                        size=\"sm\"\n                        tag=\"label\"\n                        className={classNames(\"btn-simple\", {\n                          active: bigChartData === \"data2\",\n                        })}\n                        onClick={() => setBgChartData(\"data2\")}\n                      >\n                        <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                          Purchases\n                        </span>\n                        <span className=\"d-block d-sm-none\">\n                          <i className=\"tim-icons icon-gift-2\" />\n                        </span>\n                      </Button>\n                      <Button\n                        color=\"info\"\n                        id=\"2\"\n                        size=\"sm\"\n                        tag=\"label\"\n                        className={classNames(\"btn-simple\", {\n                          active: bigChartData === \"data3\",\n                        })}\n                        onClick={() => setBgChartData(\"data3\")}\n                      >\n                        <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                          Sessions\n                        </span>\n                        <span className=\"d-block d-sm-none\">\n                          <i className=\"tim-icons icon-tap-02\" />\n                        </span>\n                      </Button>\n                    </ButtonGroup>\n                  </Col>\n                </Row>\n              </CardHeader>\n              <CardBody>\n                <div className=\"chart-area\">\n                  <Line\n                    data={chartExample1[bigChartData]}\n                    options={chartExample1.options}\n                  />\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col lg=\"4\">\n            <Card className=\"card-chart\">\n              <CardHeader>\n                <h5 className=\"card-category\">Total Shipments</h5>\n                <CardTitle tag=\"h3\">\n                  <i className=\"tim-icons icon-bell-55 text-info\" /> 763,215\n                </CardTitle>\n              </CardHeader>\n              <CardBody>\n                <div className=\"chart-area\">\n                  <Line\n                    data={chartExample2.data}\n                    options={chartExample2.options}\n                  />\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col lg=\"4\">\n            <Card className=\"card-chart\">\n              <CardHeader>\n                <h5 className=\"card-category\">Daily Sales</h5>\n                <CardTitle tag=\"h3\">\n                  <i className=\"tim-icons icon-delivery-fast text-primary\" />{\" \"}\n                  3,500€\n                </CardTitle>\n              </CardHeader>\n              <CardBody>\n                <div className=\"chart-area\">\n                  <Bar\n                    data={chartExample3.data}\n                    options={chartExample3.options}\n                  />\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col lg=\"4\">\n            <Card className=\"card-chart\">\n              <CardHeader>\n                <h5 className=\"card-category\">Completed Tasks</h5>\n                <CardTitle tag=\"h3\">\n                  <i className=\"tim-icons icon-send text-success\" /> 12,100K\n                </CardTitle>\n              </CardHeader>\n              <CardBody>\n                <div className=\"chart-area\">\n                  <Line\n                    data={chartExample4.data}\n                    options={chartExample4.options}\n                  />\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col lg=\"6\" md=\"12\">\n            <Card className=\"card-tasks\">\n              <CardHeader>\n                <h6 className=\"title d-inline\">Tasks(5)</h6>\n                <p className=\"card-category d-inline\"> today</p>\n                <UncontrolledDropdown>\n                  <DropdownToggle\n                    caret\n                    className=\"btn-icon\"\n                    color=\"link\"\n                    data-toggle=\"dropdown\"\n                    type=\"button\"\n                  >\n                    <i className=\"tim-icons icon-settings-gear-63\" />\n                  </DropdownToggle>\n                  <DropdownMenu aria-labelledby=\"dropdownMenuLink\" right>\n                    <DropdownItem\n                      href=\"#pablo\"\n                      onClick={(e) => e.preventDefault()}\n                    >\n                      Action\n                    </DropdownItem>\n                    <DropdownItem\n                      href=\"#pablo\"\n                      onClick={(e) => e.preventDefault()}\n                    >\n                      Another action\n                    </DropdownItem>\n                    <DropdownItem\n                      href=\"#pablo\"\n                      onClick={(e) => e.preventDefault()}\n                    >\n                      Something else\n                    </DropdownItem>\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n              </CardHeader>\n              <CardBody>\n                <div className=\"table-full-width table-responsive\">\n                  <Table>\n                    <tbody>\n                      <tr>\n                        <td>\n                          <FormGroup check>\n                            <Label check>\n                              <Input defaultValue=\"\" type=\"checkbox\" />\n                              <span className=\"form-check-sign\">\n                                <span className=\"check\" />\n                              </span>\n                            </Label>\n                          </FormGroup>\n                        </td>\n                        <td>\n                          <p className=\"title\">Update the Documentation</p>\n                          <p className=\"text-muted\">\n                            Dwuamish Head, Seattle, WA 8:47 AM\n                          </p>\n                        </td>\n                        <td className=\"td-actions text-right\">\n                          <Button\n                            color=\"link\"\n                            id=\"tooltip636901683\"\n                            title=\"\"\n                            type=\"button\"\n                          >\n                            <i className=\"tim-icons icon-pencil\" />\n                          </Button>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip636901683\"\n                            placement=\"right\"\n                          >\n                            Edit Task\n                          </UncontrolledTooltip>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          <FormGroup check>\n                            <Label check>\n                              <Input\n                                defaultChecked\n                                defaultValue=\"\"\n                                type=\"checkbox\"\n                              />\n                              <span className=\"form-check-sign\">\n                                <span className=\"check\" />\n                              </span>\n                            </Label>\n                          </FormGroup>\n                        </td>\n                        <td>\n                          <p className=\"title\">GDPR Compliance</p>\n                          <p className=\"text-muted\">\n                            The GDPR is a regulation that requires businesses to\n                            protect the personal data and privacy of Europe\n                            citizens for transactions that occur within EU\n                            member states.\n                          </p>\n                        </td>\n                        <td className=\"td-actions text-right\">\n                          <Button\n                            color=\"link\"\n                            id=\"tooltip457194718\"\n                            title=\"\"\n                            type=\"button\"\n                          >\n                            <i className=\"tim-icons icon-pencil\" />\n                          </Button>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip457194718\"\n                            placement=\"right\"\n                          >\n                            Edit Task\n                          </UncontrolledTooltip>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          <FormGroup check>\n                            <Label check>\n                              <Input defaultValue=\"\" type=\"checkbox\" />\n                              <span className=\"form-check-sign\">\n                                <span className=\"check\" />\n                              </span>\n                            </Label>\n                          </FormGroup>\n                        </td>\n                        <td>\n                          <p className=\"title\">Solve the issues</p>\n                          <p className=\"text-muted\">\n                            Fifty percent of all respondents said they would be\n                            more likely to shop at a company\n                          </p>\n                        </td>\n                        <td className=\"td-actions text-right\">\n                          <Button\n                            color=\"link\"\n                            id=\"tooltip362404923\"\n                            title=\"\"\n                            type=\"button\"\n                          >\n                            <i className=\"tim-icons icon-pencil\" />\n                          </Button>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip362404923\"\n                            placement=\"right\"\n                          >\n                            Edit Task\n                          </UncontrolledTooltip>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          <FormGroup check>\n                            <Label check>\n                              <Input defaultValue=\"\" type=\"checkbox\" />\n                              <span className=\"form-check-sign\">\n                                <span className=\"check\" />\n                              </span>\n                            </Label>\n                          </FormGroup>\n                        </td>\n                        <td>\n                          <p className=\"title\">Release v2.0.0</p>\n                          <p className=\"text-muted\">\n                            Ra Ave SW, Seattle, WA 98116, SUA 11:19 AM\n                          </p>\n                        </td>\n                        <td className=\"td-actions text-right\">\n                          <Button\n                            color=\"link\"\n                            id=\"tooltip818217463\"\n                            title=\"\"\n                            type=\"button\"\n                          >\n                            <i className=\"tim-icons icon-pencil\" />\n                          </Button>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip818217463\"\n                            placement=\"right\"\n                          >\n                            Edit Task\n                          </UncontrolledTooltip>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          <FormGroup check>\n                            <Label check>\n                              <Input defaultValue=\"\" type=\"checkbox\" />\n                              <span className=\"form-check-sign\">\n                                <span className=\"check\" />\n                              </span>\n                            </Label>\n                          </FormGroup>\n                        </td>\n                        <td>\n                          <p className=\"title\">Export the processed files</p>\n                          <p className=\"text-muted\">\n                            The report also shows that consumers will not easily\n                            forgive a company once a breach exposing their\n                            personal data occurs.\n                          </p>\n                        </td>\n                        <td className=\"td-actions text-right\">\n                          <Button\n                            color=\"link\"\n                            id=\"tooltip831835125\"\n                            title=\"\"\n                            type=\"button\"\n                          >\n                            <i className=\"tim-icons icon-pencil\" />\n                          </Button>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip831835125\"\n                            placement=\"right\"\n                          >\n                            Edit Task\n                          </UncontrolledTooltip>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          <FormGroup check>\n                            <Label check>\n                              <Input defaultValue=\"\" type=\"checkbox\" />\n                              <span className=\"form-check-sign\">\n                                <span className=\"check\" />\n                              </span>\n                            </Label>\n                          </FormGroup>\n                        </td>\n                        <td>\n                          <p className=\"title\">Arival at export process</p>\n                          <p className=\"text-muted\">\n                            Capitol Hill, Seattle, WA 12:34 AM\n                          </p>\n                        </td>\n                        <td className=\"td-actions text-right\">\n                          <Button\n                            color=\"link\"\n                            id=\"tooltip217595172\"\n                            title=\"\"\n                            type=\"button\"\n                          >\n                            <i className=\"tim-icons icon-pencil\" />\n                          </Button>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip217595172\"\n                            placement=\"right\"\n                          >\n                            Edit Task\n                          </UncontrolledTooltip>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </Table>\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col lg=\"6\" md=\"12\">\n            <Card>\n              <CardHeader>\n                <CardTitle tag=\"h4\">Simple Table</CardTitle>\n              </CardHeader>\n              <CardBody>\n                <Table className=\"tablesorter\" responsive>\n                  <thead className=\"text-primary\">\n                    <tr>\n                      <th>Name</th>\n                      <th>Country</th>\n                      <th>City</th>\n                      <th className=\"text-center\">Salary</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <td>Dakota Rice</td>\n                      <td>Niger</td>\n                      <td>Oud-Turnhout</td>\n                      <td className=\"text-center\">$36,738</td>\n                    </tr>\n                    <tr>\n                      <td>Minerva Hooper</td>\n                      <td>Curaçao</td>\n                      <td>Sinaai-Waas</td>\n                      <td className=\"text-center\">$23,789</td>\n                    </tr>\n                    <tr>\n                      <td>Sage Rodriguez</td>\n                      <td>Netherlands</td>\n                      <td>Baileux</td>\n                      <td className=\"text-center\">$56,142</td>\n                    </tr>\n                    <tr>\n                      <td>Philip Chaney</td>\n                      <td>Korea, South</td>\n                      <td>Overland Park</td>\n                      <td className=\"text-center\">$38,735</td>\n                    </tr>\n                    <tr>\n                      <td>Doris Greene</td>\n                      <td>Malawi</td>\n                      <td>Feldkirchen in Kärnten</td>\n                      <td className=\"text-center\">$63,542</td>\n                    </tr>\n                    <tr>\n                      <td>Mason Porter</td>\n                      <td>Chile</td>\n                      <td>Gloucester</td>\n                      <td className=\"text-center\">$78,615</td>\n                    </tr>\n                    <tr>\n                      <td>Jon Porter</td>\n                      <td>Portugal</td>\n                      <td>Gloucester</td>\n                      <td className=\"text-center\">$98,615</td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n}\n\nexport default Dashboard;\n"," \nimport React from \"react\";\n\n// reactstrap components\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\n\nconst MapWrapper = () => {\n  const mapRef = React.useRef(null);\n  React.useEffect(() => {\n    let google = window.google;\n    let map = mapRef.current;\n    let lat = \"40.748817\";\n    let lng = \"-73.985428\";\n    const myLatlng = new google.maps.LatLng(lat, lng);\n    const mapOptions = {\n      scrollwheel: false, //we disable de scroll over the map, it is a really annoing when you scroll through page\n      styles: [\n        {\n          elementType: \"geometry\",\n          stylers: [\n            {\n              color: \"#1d2c4d\",\n            },\n          ],\n        },\n        {\n          elementType: \"labels.text.fill\",\n          stylers: [\n            {\n              color: \"#8ec3b9\",\n            },\n          ],\n        },\n        {\n          elementType: \"labels.text.stroke\",\n          stylers: [\n            {\n              color: \"#1a3646\",\n            },\n          ],\n        },\n        {\n          featureType: \"administrative.country\",\n          elementType: \"geometry.stroke\",\n          stylers: [\n            {\n              color: \"#4b6878\",\n            },\n          ],\n        },\n        {\n          featureType: \"administrative.land_parcel\",\n          elementType: \"labels.text.fill\",\n          stylers: [\n            {\n              color: \"#64779e\",\n            },\n          ],\n        },\n        {\n          featureType: \"administrative.province\",\n          elementType: \"geometry.stroke\",\n          stylers: [\n            {\n              color: \"#4b6878\",\n            },\n          ],\n        },\n        {\n          featureType: \"landscape.man_made\",\n          elementType: \"geometry.stroke\",\n          stylers: [\n            {\n              color: \"#334e87\",\n            },\n          ],\n        },\n        {\n          featureType: \"landscape.natural\",\n          elementType: \"geometry\",\n          stylers: [\n            {\n              color: \"#023e58\",\n            },\n          ],\n        },\n        {\n          featureType: \"poi\",\n          elementType: \"geometry\",\n          stylers: [\n            {\n              color: \"#283d6a\",\n            },\n          ],\n        },\n        {\n          featureType: \"poi\",\n          elementType: \"labels.text.fill\",\n          stylers: [\n            {\n              color: \"#6f9ba5\",\n            },\n          ],\n        },\n        {\n          featureType: \"poi\",\n          elementType: \"labels.text.stroke\",\n          stylers: [\n            {\n              color: \"#1d2c4d\",\n            },\n          ],\n        },\n        {\n          featureType: \"poi.park\",\n          elementType: \"geometry.fill\",\n          stylers: [\n            {\n              color: \"#023e58\",\n            },\n          ],\n        },\n        {\n          featureType: \"poi.park\",\n          elementType: \"labels.text.fill\",\n          stylers: [\n            {\n              color: \"#3C7680\",\n            },\n          ],\n        },\n        {\n          featureType: \"road\",\n          elementType: \"geometry\",\n          stylers: [\n            {\n              color: \"#304a7d\",\n            },\n          ],\n        },\n        {\n          featureType: \"road\",\n          elementType: \"labels.text.fill\",\n          stylers: [\n            {\n              color: \"#98a5be\",\n            },\n          ],\n        },\n        {\n          featureType: \"road\",\n          elementType: \"labels.text.stroke\",\n          stylers: [\n            {\n              color: \"#1d2c4d\",\n            },\n          ],\n        },\n        {\n          featureType: \"road.highway\",\n          elementType: \"geometry\",\n          stylers: [\n            {\n              color: \"#2c6675\",\n            },\n          ],\n        },\n        {\n          featureType: \"road.highway\",\n          elementType: \"geometry.fill\",\n          stylers: [\n            {\n              color: \"#9d2a80\",\n            },\n          ],\n        },\n        {\n          featureType: \"road.highway\",\n          elementType: \"geometry.stroke\",\n          stylers: [\n            {\n              color: \"#9d2a80\",\n            },\n          ],\n        },\n        {\n          featureType: \"road.highway\",\n          elementType: \"labels.text.fill\",\n          stylers: [\n            {\n              color: \"#b0d5ce\",\n            },\n          ],\n        },\n        {\n          featureType: \"road.highway\",\n          elementType: \"labels.text.stroke\",\n          stylers: [\n            {\n              color: \"#023e58\",\n            },\n          ],\n        },\n        {\n          featureType: \"transit\",\n          elementType: \"labels.text.fill\",\n          stylers: [\n            {\n              color: \"#98a5be\",\n            },\n          ],\n        },\n        {\n          featureType: \"transit\",\n          elementType: \"labels.text.stroke\",\n          stylers: [\n            {\n              color: \"#1d2c4d\",\n            },\n          ],\n        },\n        {\n          featureType: \"transit.line\",\n          elementType: \"geometry.fill\",\n          stylers: [\n            {\n              color: \"#283d6a\",\n            },\n          ],\n        },\n        {\n          featureType: \"transit.station\",\n          elementType: \"geometry\",\n          stylers: [\n            {\n              color: \"#3a4762\",\n            },\n          ],\n        },\n        {\n          featureType: \"water\",\n          elementType: \"geometry\",\n          stylers: [\n            {\n              color: \"#0e1626\",\n            },\n          ],\n        },\n        {\n          featureType: \"water\",\n          elementType: \"labels.text.fill\",\n          stylers: [\n            {\n              color: \"#4e6d70\",\n            },\n          ],\n        },\n      ],\n    };\n\n    map = new google.maps.Map(map, mapOptions);\n\n    const marker = new google.maps.Marker({\n      position: myLatlng,\n      map: map,\n      animation: google.maps.Animation.DROP,\n      title: \"BLK Design System PRO React!\",\n    });\n\n    const contentString =\n      '<div class=\"info-window-content\"><h2>BLK Dashboard React</h2>' +\n      \"<p>A freebie Admin for ReactStrap, Bootstrap, React, and React Hooks.</p></div>\";\n\n    const infowindow = new google.maps.InfoWindow({\n      content: contentString,\n    });\n\n    google.maps.event.addListener(marker, \"click\", function () {\n      infowindow.open(map, marker);\n    });\n  }, []);\n  return <div ref={mapRef} />;\n};\n\nfunction Map() {\n  return (\n    <>\n      <div className=\"content\">\n        <Row>\n          <Col md=\"12\">\n            <Card className=\"card-plain\">\n              <CardHeader>Google Maps</CardHeader>\n              <CardBody>\n                <div\n                  id=\"map\"\n                  className=\"map\"\n                  style={{ position: \"relative\", overflow: \"hidden\" }}\n                >\n                  <MapWrapper />\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n}\n\nexport default Map;\n"," \nimport React from \"react\";\n// react plugin for creating notifications over the dashboard\nimport NotificationAlert from \"react-notification-alert\";\n\n// reactstrap components\nimport {\n  Alert,\n  UncontrolledAlert,\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nfunction Notifications() {\n  const notificationAlertRef = React.useRef(null);\n  const notify = (place) => {\n    var color = Math.floor(Math.random() * 5 + 1);\n    var type;\n    switch (color) {\n      case 1:\n        type = \"primary\";\n        break;\n      case 2:\n        type = \"success\";\n        break;\n      case 3:\n        type = \"danger\";\n        break;\n      case 4:\n        type = \"warning\";\n        break;\n      case 5:\n        type = \"info\";\n        break;\n      default:\n        break;\n    }\n    var options = {};\n    options = {\n      place: place,\n      message: (\n        <div>\n          <div>\n            Welcome to <b>Black Dashboard React</b> - a beautiful freebie for\n            every web developer.\n          </div>\n        </div>\n      ),\n      type: type,\n      icon: \"tim-icons icon-bell-55\",\n      autoDismiss: 7,\n    };\n    notificationAlertRef.current.notificationAlert(options);\n  };\n  return (\n    <>\n      <div className=\"content\">\n        <div className=\"react-notification-alert-container\">\n          <NotificationAlert ref={notificationAlertRef} />\n        </div>\n        <Row>\n          <Col md=\"6\">\n            <Card>\n              <CardHeader>\n                <CardTitle tag=\"h4\">Notifications Style</CardTitle>\n              </CardHeader>\n              <CardBody>\n                <Alert color=\"info\">\n                  <span>This is a plain notification</span>\n                </Alert>\n                <UncontrolledAlert color=\"info\">\n                  <span>This is a notification with close button.</span>\n                </UncontrolledAlert>\n                <UncontrolledAlert className=\"alert-with-icon\" color=\"info\">\n                  <span className=\"tim-icons icon-bell-55\" data-notify=\"icon\" />\n                  <span data-notify=\"message\">\n                    This is a notification with close button and icon.\n                  </span>\n                </UncontrolledAlert>\n                <UncontrolledAlert className=\"alert-with-icon\" color=\"info\">\n                  <span className=\"tim-icons icon-bell-55\" data-notify=\"icon\" />\n                  <span data-notify=\"message\">\n                    This is a notification with close button and icon and have\n                    many lines. You can see that the icon and the close button\n                    are always vertically aligned. This is a beautiful\n                    notification. So you don't have to worry about the style.\n                  </span>\n                </UncontrolledAlert>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col md=\"6\">\n            <Card>\n              <CardHeader>\n                <CardTitle tag=\"h4\">Notification states</CardTitle>\n              </CardHeader>\n              <CardBody>\n                <UncontrolledAlert color=\"primary\">\n                  <span>\n                    <b>Primary - </b>\n                    This is a regular notification made with \".alert-primary\"\n                  </span>\n                </UncontrolledAlert>\n                <UncontrolledAlert color=\"info\">\n                  <span>\n                    <b>Info - </b>\n                    This is a regular notification made with \".alert-info\"\n                  </span>\n                </UncontrolledAlert>\n                <UncontrolledAlert color=\"success\">\n                  <span>\n                    <b>Success - </b>\n                    This is a regular notification made with \".alert-success\"\n                  </span>\n                </UncontrolledAlert>\n                <UncontrolledAlert color=\"warning\">\n                  <span>\n                    <b>Warning - </b>\n                    This is a regular notification made with \".alert-warning\"\n                  </span>\n                </UncontrolledAlert>\n                <UncontrolledAlert color=\"danger\">\n                  <span>\n                    <b>Danger - </b>\n                    This is a regular notification made with \".alert-danger\"\n                  </span>\n                </UncontrolledAlert>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col md=\"12\">\n            <Card>\n              <CardBody>\n                <div className=\"places-buttons\">\n                  <Row>\n                    <Col className=\"ml-auto mr-auto text-center\" md=\"6\">\n                      <CardTitle tag=\"h4\">\n                        Notifications Places\n                        <p className=\"category\">Click to view notifications</p>\n                      </CardTitle>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col className=\"ml-auto mr-auto\" lg=\"8\">\n                      <Row>\n                        <Col md=\"4\">\n                          <Button\n                            block\n                            color=\"primary\"\n                            onClick={() => notify(\"tl\")}\n                          >\n                            Top Left\n                          </Button>\n                        </Col>\n                        <Col md=\"4\">\n                          <Button\n                            block\n                            color=\"primary\"\n                            onClick={() => notify(\"tc\")}\n                          >\n                            Top Center\n                          </Button>\n                        </Col>\n                        <Col md=\"4\">\n                          <Button\n                            block\n                            color=\"primary\"\n                            onClick={() => notify(\"tr\")}\n                          >\n                            Top Right\n                          </Button>\n                        </Col>\n                      </Row>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col className=\"ml-auto mr-auto\" lg=\"8\">\n                      <Row>\n                        <Col md=\"4\">\n                          <Button\n                            block\n                            color=\"primary\"\n                            onClick={() => notify(\"bl\")}\n                          >\n                            Bottom Left\n                          </Button>\n                        </Col>\n                        <Col md=\"4\">\n                          <Button\n                            block\n                            color=\"primary\"\n                            onClick={() => notify(\"bc\")}\n                          >\n                            Bottom Center\n                          </Button>\n                        </Col>\n                        <Col md=\"4\">\n                          <Button\n                            block\n                            color=\"primary\"\n                            onClick={() => notify(\"br\")}\n                          >\n                            Bottom Right\n                          </Button>\n                        </Col>\n                      </Row>\n                    </Col>\n                  </Row>\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n}\n\nexport default Notifications;\n"," \nimport React from \"react\";\n\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Table,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nfunction Tables() {\n  return (\n    <>\n      <div className=\"content\">\n        <Row>\n          <Col md=\"12\">\n            <Card>\n              <CardHeader>\n                <CardTitle tag=\"h4\">Simple Table</CardTitle>\n              </CardHeader>\n              <CardBody>\n                <Table className=\"tablesorter\" responsive>\n                  <thead className=\"text-primary\">\n                    <tr>\n                      <th>Name</th>\n                      <th>Country</th>\n                      <th>City</th>\n                      <th className=\"text-center\">Salary</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <td>Dakota Rice</td>\n                      <td>Niger</td>\n                      <td>Oud-Turnhout</td>\n                      <td className=\"text-center\">$36,738</td>\n                    </tr>\n                    <tr>\n                      <td>Minerva Hooper</td>\n                      <td>Curaçao</td>\n                      <td>Sinaai-Waas</td>\n                      <td className=\"text-center\">$23,789</td>\n                    </tr>\n                    <tr>\n                      <td>Sage Rodriguez</td>\n                      <td>Netherlands</td>\n                      <td>Baileux</td>\n                      <td className=\"text-center\">$56,142</td>\n                    </tr>\n                    <tr>\n                      <td>Philip Chaney</td>\n                      <td>Korea, South</td>\n                      <td>Overland Park</td>\n                      <td className=\"text-center\">$38,735</td>\n                    </tr>\n                    <tr>\n                      <td>Doris Greene</td>\n                      <td>Malawi</td>\n                      <td>Feldkirchen in Kärnten</td>\n                      <td className=\"text-center\">$63,542</td>\n                    </tr>\n                    <tr>\n                      <td>Mason Porter</td>\n                      <td>Chile</td>\n                      <td>Gloucester</td>\n                      <td className=\"text-center\">$78,615</td>\n                    </tr>\n                    <tr>\n                      <td>Jon Porter</td>\n                      <td>Portugal</td>\n                      <td>Gloucester</td>\n                      <td className=\"text-center\">$98,615</td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col md=\"12\">\n            <Card className=\"card-plain\">\n              <CardHeader>\n                <CardTitle tag=\"h4\"> </CardTitle>\n                <p className=\"category\"> </p>\n              </CardHeader>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n}\n\nexport default Tables;\n"," \nimport React from \"react\";\n\n// reactstrap components\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\n\nfunction Typography() {\n  return (\n    <>\n      <div className=\"content\">\n        <Row>\n          <Col md=\"12\">\n            <Card>\n              <CardHeader className=\"mb-5\">\n                <h5 className=\"card-category\">Black Table Heading</h5>\n                <CardTitle tag=\"h3\">\n                  Created using Poppins Font Family\n                </CardTitle>\n              </CardHeader>\n              <CardBody>\n                <div className=\"typography-line\">\n                  <h1>\n                    <span>Header 1</span>\n                    The Life of Black Dashboard React\n                  </h1>\n                </div>\n                <div className=\"typography-line\">\n                  <h2>\n                    <span>Header 2</span>\n                    The Life of Black Dashboard React\n                  </h2>\n                </div>\n                <div className=\"typography-line\">\n                  <h3>\n                    <span>Header 3</span>\n                    The Life of Black Dashboard React\n                  </h3>\n                </div>\n                <div className=\"typography-line\">\n                  <h4>\n                    <span>Header 4</span>\n                    The Life of Black Dashboard React\n                  </h4>\n                </div>\n                <div className=\"typography-line\">\n                  <h5>\n                    <span>Header 5</span>\n                    The Life of Black Dashboard React\n                  </h5>\n                </div>\n                <div className=\"typography-line\">\n                  <h6>\n                    <span>Header 6</span>\n                    The Life of Black Dashboard React\n                  </h6>\n                </div>\n                <div className=\"typography-line\">\n                  <p>\n                    <span>Paragraph</span>I will be the leader of a company that\n                    ends up being worth billions of dollars, because I got the\n                    answers. I understand culture. I am the nucleus. I think\n                    that’s a responsibility that I have, to push possibilities,\n                    to show people, this is the level that things could be at.\n                  </p>\n                </div>\n                <div className=\"typography-line\">\n                  <span>Quote</span>\n                  <blockquote>\n                    <p className=\"blockquote blockquote-primary\">\n                      \"I will be the leader of a company that ends up being\n                      worth billions of dollars, because I got the answers. I\n                      understand culture. I am the nucleus. I think that’s a\n                      responsibility that I have, to push possibilities, to show\n                      people, this is the level that things could be at.\" <br />\n                      <br />\n                      <small>- Noaa</small>\n                    </p>\n                  </blockquote>\n                </div>\n                <div className=\"typography-line\">\n                  <span>Muted Text</span>\n                  <p className=\"text-muted\">\n                    I will be the leader of a company that ends up being worth\n                    billions of dollars, because I got the answers...\n                  </p>\n                </div>\n                <div className=\"typography-line\">\n                  <span>Primary Text</span>\n                  <p className=\"text-primary\">\n                    I will be the leader of a company that ends up being worth\n                    billions of dollars, because I got the answers...\n                  </p>\n                </div>\n                <div className=\"typography-line\">\n                  <span>Info Text</span>\n                  <p className=\"text-info\">\n                    I will be the leader of a company that ends up being worth\n                    billions of dollars, because I got the answers...\n                  </p>\n                </div>\n                <div className=\"typography-line\">\n                  <span>Success Text</span>\n                  <p className=\"text-success\">\n                    I will be the leader of a company that ends up being worth\n                    billions of dollars, because I got the answers...\n                  </p>\n                </div>\n                <div className=\"typography-line\">\n                  <span>Warning Text</span>\n                  <p className=\"text-warning\">\n                    I will be the leader of a company that ends up being worth\n                    billions of dollars, because I got the answers...\n                  </p>\n                </div>\n                <div className=\"typography-line\">\n                  <span>Danger Text</span>\n                  <p className=\"text-danger\">\n                    I will be the leader of a company that ends up being worth\n                    billions of dollars, because I got the answers...\n                  </p>\n                </div>\n                <div className=\"typography-line\">\n                  <h2>\n                    <span>Small Tag</span>\n                    Header with small subtitle <br />\n                    <small>Use \"small\" tag for the headers</small>\n                  </h2>\n                </div>\n                <div className=\"typography-line\">\n                  <span>Lists</span>\n                  <Row>\n                    <Col md=\"3\">\n                      <h5>Unordered List</h5>\n                      <ul>\n                        <li>List Item</li>\n                        <li>List Item</li>\n                        <li className=\"list-unstyled\">\n                          <ul>\n                            <li>List Item</li>\n                            <li>List Item</li>\n                            <li>List Item</li>\n                          </ul>\n                        </li>\n                        <li>List Item</li>\n                      </ul>\n                    </Col>\n                    <Col md=\"3\">\n                      <h5>Ordered List</h5>\n                      <ol>\n                        <li>List Item</li>\n                        <li>List Item</li>\n                        <li>List item</li>\n                        <li>List Item</li>\n                      </ol>\n                    </Col>\n                    <Col md=\"3\">\n                      <h5>Unstyled List</h5>\n                      <ul className=\"list-unstyled\">\n                        <li>List Item</li>\n                        <li>List Item</li>\n                        <li>List item</li>\n                        <li>List Item</li>\n                      </ul>\n                    </Col>\n                    <Col md=\"3\">\n                      <h5>Inline List</h5>\n                      <ul className=\"list-inline\">\n                        <li className=\"list-inline-item\">List1</li>\n                        <li className=\"list-inline-item\">List2</li>\n                        <li className=\"list-inline-item\">List3</li>\n                      </ul>\n                    </Col>\n                  </Row>\n                </div>\n                <div className=\"typography-line\">\n                  <span>Code</span>\n                  <p>\n                    This is <code>.css-class-as-code</code>, an example of an\n                    inline code element. Wrap inline code within a{\" \"}\n                    <code>{`<code>...</code>`}</code>\n                    tag.\n                  </p>\n                  <pre>\n                    1. #This is an example of preformatted text.\n                    <br />\n                    2. #Here is another line of code\n                  </pre>\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n}\n\nexport default Typography;\n"," \nimport React from \"react\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardText,\n  FormGroup,\n  Form,\n  Input,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nfunction UserProfile() {\n  return (\n    <>\n      <div className=\"content\">\n        <Row>\n          <Col md=\"8\">\n            <Card>\n              <CardHeader>\n                <h5 className=\"title\">Edit Profile</h5>\n              </CardHeader>\n              <CardBody>\n                <Form>\n                  <Row>\n                    <Col className=\"pr-md-1\" md=\"5\">\n                      <FormGroup>\n                        <label>Company (disabled)</label>\n                        <Input\n                          defaultValue=\"Creative Code Inc.\"\n                          disabled\n                          placeholder=\"Company\"\n                          type=\"text\"\n                        />\n                      </FormGroup>\n                    </Col>\n                    <Col className=\"px-md-1\" md=\"3\">\n                      <FormGroup>\n                        <label>Username</label>\n                        <Input\n                          defaultValue=\"michael23\"\n                          placeholder=\"Username\"\n                          type=\"text\"\n                        />\n                      </FormGroup>\n                    </Col>\n                    <Col className=\"pl-md-1\" md=\"4\">\n                      <FormGroup>\n                        <label htmlFor=\"exampleInputEmail1\">\n                          Email address\n                        </label>\n                        <Input placeholder=\"mike@email.com\" type=\"email\" />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col className=\"pr-md-1\" md=\"6\">\n                      <FormGroup>\n                        <label>First Name</label>\n                        <Input\n                          defaultValue=\"Mike\"\n                          placeholder=\"Company\"\n                          type=\"text\"\n                        />\n                      </FormGroup>\n                    </Col>\n                    <Col className=\"pl-md-1\" md=\"6\">\n                      <FormGroup>\n                        <label>Last Name</label>\n                        <Input\n                          defaultValue=\"Andrew\"\n                          placeholder=\"Last Name\"\n                          type=\"text\"\n                        />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col md=\"12\">\n                      <FormGroup>\n                        <label>Address</label>\n                        <Input\n                          defaultValue=\"Bld Mihail Kogalniceanu, nr. 8 Bl 1, Sc 1, Ap 09\"\n                          placeholder=\"Home Address\"\n                          type=\"text\"\n                        />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col className=\"pr-md-1\" md=\"4\">\n                      <FormGroup>\n                        <label>City</label>\n                        <Input\n                          defaultValue=\"Mike\"\n                          placeholder=\"City\"\n                          type=\"text\"\n                        />\n                      </FormGroup>\n                    </Col>\n                    <Col className=\"px-md-1\" md=\"4\">\n                      <FormGroup>\n                        <label>Country</label>\n                        <Input\n                          defaultValue=\"Andrew\"\n                          placeholder=\"Country\"\n                          type=\"text\"\n                        />\n                      </FormGroup>\n                    </Col>\n                    <Col className=\"pl-md-1\" md=\"4\">\n                      <FormGroup>\n                        <label>Postal Code</label>\n                        <Input placeholder=\"ZIP Code\" type=\"number\" />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col md=\"8\">\n                      <FormGroup>\n                        <label>About Me</label>\n                        <Input\n                          cols=\"80\"\n                          defaultValue=\"Lamborghini Mercy, Your chick she so thirsty, I'm in\n                            that two seat Lambo.\"\n                          placeholder=\"Here can be your description\"\n                          rows=\"4\"\n                          type=\"textarea\"\n                        />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                </Form>\n              </CardBody>\n              <CardFooter>\n                <Button className=\"btn-fill\" color=\"primary\" type=\"submit\">\n                  Save\n                </Button>\n              </CardFooter>\n            </Card>\n          </Col>\n          <Col md=\"4\">\n            <Card className=\"card-user\">\n              <CardBody>\n                <CardText />\n                <div className=\"author\">\n                  <div className=\"block block-one\" />\n                  <div className=\"block block-two\" />\n                  <div className=\"block block-three\" />\n                  <div className=\"block block-four\" />\n                  <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n                    <img\n                      alt=\"...\"\n                      className=\"avatar\"\n                      src={require(\"../../src/assets/img/emilyz.jpg\").default}\n                    />\n                    <h5 className=\"title\">Mike Andrew</h5>\n                  </a>\n                  <p className=\"description\">Ceo/Co-Founder</p>\n                </div>\n                <div className=\"card-description\">\n                  Do not be scared of the truth because we need to restart the\n                  human foundation in truth And I love you like Kanye loves\n                  Kanye I love Rick Owens’ bed design but the back is...\n                </div>\n              </CardBody>\n              <CardFooter>\n                <div className=\"button-container\">\n                  <Button className=\"btn-icon btn-round\" color=\"facebook\">\n                    <i className=\"fab fa-facebook\" />\n                  </Button>\n                  <Button className=\"btn-icon btn-round\" color=\"twitter\">\n                    <i className=\"fab fa-twitter\" />\n                  </Button>\n                  <Button className=\"btn-icon btn-round\" color=\"google\">\n                    <i className=\"fab fa-google-plus\" />\n                  </Button>\n                </div>\n              </CardFooter>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n}\n\nexport default UserProfile;\n"," \nimport React from \"react\";\nimport { Route, Switch, Redirect, useLocation } from \"react-router-dom\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\n// core components\nimport AdminNavbar from \"../../../src/components/Navbars/AdminNavbar\";\nimport Footer from \"../../components/Footer/Footer.js\";\nimport Sidebar from \"../../../src/components/sidebar/Sidebar\";\nimport FixedPlugin from \"../../../src/components/FixedPlugin/FixedPlugin\";\n\nimport routes from \"../../../src/routes.js\";\n\nimport logo from \"../../../src/assets/img/react-logo.png\";\nimport { BackgroundColorContext } from \"../../contexts/BackgroundColorContext\";\n\nvar ps;\n\nfunction Admin(props) {\n  const location = useLocation();\n  const mainPanelRef = React.useRef(null);\n  const [sidebarOpened, setsidebarOpened] = React.useState(\n    document.documentElement.className.indexOf(\"nav-open\") !== -1\n  );\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      document.documentElement.className += \" perfect-scrollbar-on\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-off\");\n      ps = new PerfectScrollbar(mainPanelRef.current, {\n        suppressScrollX: true,\n      });\n      let tables = document.querySelectorAll(\".table-responsive\");\n      for (let i = 0; i < tables.length; i++) {\n        ps = new PerfectScrollbar(tables[i]);\n      }\n    }\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n        document.documentElement.classList.add(\"perfect-scrollbar-off\");\n        document.documentElement.classList.remove(\"perfect-scrollbar-on\");\n      }\n    };\n  });\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      let tables = document.querySelectorAll(\".table-responsive\");\n      for (let i = 0; i < tables.length; i++) {\n        ps = new PerfectScrollbar(tables[i]);\n      }\n    }\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    if (mainPanelRef.current) {\n      mainPanelRef.current.scrollTop = 0;\n    }\n  }, [location]);\n  // this function opens and closes the sidebar on small devices\n  const toggleSidebar = () => {\n    document.documentElement.classList.toggle(\"nav-open\");\n    setsidebarOpened(!sidebarOpened);\n  };\n  const getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  const getBrandText = (path) => {\n    for (let i = 0; i < routes.length; i++) {\n      if (location.pathname.indexOf(routes[i].layout + routes[i].path) !== -1) {\n        return routes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n  return (\n    <BackgroundColorContext.Consumer>\n      {({ color, changeColor }) => (\n        <React.Fragment>\n          <div className=\"wrapper\">\n            <Sidebar\n              routes={routes}\n         \n              toggleSidebar={toggleSidebar}\n            />\n            <div className=\"main-panel\" ref={mainPanelRef} data={color}>\n              <AdminNavbar\n                brandText={getBrandText(location.pathname)}\n                toggleSidebar={toggleSidebar}\n                sidebarOpened={sidebarOpened}\n              />\n              <Switch>\n                {getRoutes(routes)}\n                <Redirect from=\"*\" to=\"/admin/dashboard\" />\n              </Switch>\n              {\n                // we don't want the Footer to be rendered on map page\n                location.pathname === \"/admin/maps\" ? null : <Footer fluid />\n              }\n            </div>\n          </div>\n          <FixedPlugin bgColor={color} handleBgClick={changeColor} />\n        </React.Fragment>\n      )}\n    </BackgroundColorContext.Consumer>\n  );\n}\n\nexport default Admin;\n","import Dashboard from \"../src/views/Dashboard\";\nimport Icons from \"../src/views/Icons.js\";\nimport Map from \"../src/views/Map.js\";\nimport Notifications from \"../src/views/Notifications.js\";\nimport Rtl from \"../src/views/Rtl\";\nimport TableList from \"../src/views/TableList.js\";\nimport Typography from \"../src/views/Typography.js\";\nimport UserProfile from \"../src/views/UserProfile.js\";\n\nvar routes = [\n  {\n    path: \"/dashboard\",\n    name: \"Panel\",\n    rtlName: \"لوحة القيادة\",\n //   icon: \"tim-icons icon-chart-pie-36\",\n    component: Dashboard,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/tables\",\n    name: \"Admin İşlemler\",\n    rtlName: \"لوحة القيادة\",\n  //  icon: \"tim-icons icon-chart-pie-36\",\n    component: TableList,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/tables\",\n    name: \"Mod  İşlemler\",\n    rtlName: \"لوحة القيادة\",\n  //  icon: \"tim-icons icon-chart-pie-36\",\n    component: TableList,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/tables\",\n    name: \"Uye  İşlemler\",\n    rtlName: \"لوحة القيادة\",\n   // icon: \"tim-icons icon-chart-pie-36\",\n    component: TableList,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/tables\",\n    name: \"Falcı  İşlemler\",\n    rtlName: \"لوحة القيادة\",\n   // icon: \"tim-icons icon-chart-pie-36\",\n    component: TableList,\n    layout: \"/admin\",\n  },\n\n  {\n    path: \"/tables\",\n    name: \"Sistem  İşlemler\",\n    rtlName: \"لوحة القيادة\",\n   // icon: \"tim-icons icon-chart-pie-36\",\n    component: TableList,\n    layout: \"/admin\",\n  },\n \n  {\n    path: \"/notifications\",\n    name: \"Notifications\",\n    rtlName: \"إخطارات\",\n //   icon: \"tim-icons icon-bell-55\",\n    component: Notifications,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/user-profile\",\n    name: \"Admin Ekle\",\n    rtlName: \"ملف تعريفي للمستخدم\",\n    icon: \"tim-icons icon-single-02\",\n    component: UserProfile,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/user-profile\",\n    name: \"Mod Ekle\",\n    rtlName: \"ملف تعريفي للمستخدم\",\n    icon: \"tim-icons icon-single-02\",\n    component: UserProfile,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/user-profile\",\n    name: \"Falcı Ekle\",\n    rtlName: \"ملف تعريفي للمستخدم\",\n    icon: \"tim-icons icon-single-02\",\n    component: UserProfile,\n    layout: \"/admin\",\n  },\n \n  {\n    path: \"/user-profile\",\n    name: \"Üye Ekle\",\n    rtlName: \"ملف تعريفي للمستخدم\",\n    icon: \"tim-icons icon-single-02\",\n    component: UserProfile,\n    layout: \"/admin\",\n  }, \n   \n];\nexport default routes;\n","export default __webpack_public_path__ + \"static/media/react-logo.561f1671.png\";","import React, { useState } from 'react';\nimport Aside from './Aside';\nimport Main from './Main';\nimport AdminLayout from \"../../src/layouts/Admin/Admin.js\";\nfunction Layout({ setLocale }) {\n  const [rtl, setRtl] = useState(false);\n  const [collapsed, setCollapsed] = useState(false);\n  const [image, setImage] = useState(true);\n  const [toggled, setToggled] = useState(false);\n \n\n  const handleToggleSidebar = (value) => {\n    setToggled(value);\n  };\n\n  return (\n    \n    <div className={`app ${rtl ? 'rtl' : ''} ${toggled ? 'toggled' : ''}`}>\n     \n     {/*  <Aside\n        \n      /> */}\n      {/* <Main\n        image={image}\n        toggled={toggled}\n        collapsed={collapsed}\n        rtl={rtl}\n        handleToggleSidebar={handleToggleSidebar}\n        handleCollapsedChange={handleCollapsedChange}\n        handleRtlChange={handleRtlChange}\n        handleImageChange={handleImageChange}\n      /> */}\n\n\n<AdminLayout/>\n     \n    </div>\n  );\n}\n\nexport default Layout;\n","export default {\n  ar: {\n    title: 'رياكت پرو سايد بار',\n    sidebarTitle: 'پرو سايد بار',\n    description: 'شريط جانبي مع قوائم منسدلة وعدد غير محدود من القوائم الفرعية المتداخلة',\n    dashboard: 'لوحة القيادة',\n    components: 'مكونات',\n    dropdown: 'اسقاط',\n    submenu: 'قائمة فرعية',\n    multiLevel: 'متعدد المستويات',\n    collapsed: 'انطوى',\n    rtl: 'ر ت ل',\n    image: 'صورة الخلفية',\n    new: 'جديد',\n    withPrefix: 'مع البادئة',\n    withSuffix: 'مع اللاحقة',\n    viewSource: 'عرض الكود',\n  },\n  en: {\n    title: ' ',\n    sidebarTitle: 'Pro Sidebar',\n    description:\n      ' ',\n    dashboard: 'Dashboard',\n    components: 'Components',\n    dropdown: 'Dropdown',\n    submenu: 'Submenu',\n    multiLevel: 'Multi Level',\n    collapsed: 'Collapsed',\n    rtl: 'RTL',\n    image: 'Arkaplan Kapat',\n    new: 'NEW',\n    withPrefix: 'With Prefix',\n    withSuffix: 'With Suffix',\n    viewSource: 'View Source',\n  },\n};\n","import React, { useState } from 'react';\r\nimport { IntlProvider } from 'react-intl';\r\nimport Layout from './Layout';\r\nimport messages from './messages';\r\nimport '../styles/App.scss';\r\n\r\nexport default function BoardAdmin() {\r\n  const [locale, setLocale] = useState('en');\r\n  return (\r\n    <IntlProvider locale={locale} messages={messages[locale]}>\r\n    <Layout setLocale={setLocale} />\r\n  </IntlProvider>\r\n  )\r\n}\r\n","import React, { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nexport default class BoardUnlu extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getModeratorBoard().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}\n","/*\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport AdminLayout from \"../src/layouts/Admin/Admin.js\";\nimport RTLLayout from \"../src/layouts/RTL/RTL.js\";\n\nimport \"../src/assets/scss/black-dashboard-react.scss\";\nimport \"../src/assets/demo/demo.css\";\nimport \"../src/assets/css/nucleo-icons.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\n\nimport ThemeContextWrapper from \"../src/components/ThemeWrapper/ThemeWrapper\";\nimport BackgroundColorWrapper from \"../src/components/BackgroundColorWrapper/BackgroundColorWrapper\";\n\nReactDOM.render(\n  <ThemeContextWrapper>\n    <BackgroundColorWrapper>\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/admin\" render={(props) => <AdminLayout {...props} />} />\n          <Route path=\"/rtl\" render={(props) => <RTLLayout {...props} />} />\n          <Redirect from=\"/\" to=\"/admin/dashboard\" />\n        </Switch>\n      </BrowserRouter>\n    </BackgroundColorWrapper>\n  </ThemeContextWrapper>,\n  document.getElementById(\"root\")\n  */\nimport React, { Component } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\n//import \"bootstrap/dist/css/bootstrap.min.css\";\n//import \"./App.css\";\nimport \"../src/assets/scss/black-dashboard-react.scss\";\nimport \"../src/assets/demo/demo.css\";\nimport \"../src/assets/css/nucleo-icons.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\n\nimport AuthService from \"./services/auth.service\";\n\nimport Login from \"../src/components/login.component\";\nimport Register from \"../src/components/register.component\";\nimport Home from \"../src/components/home.component\";\nimport Profile from \"../src/components/profile.component\";\nimport BoardUser from \"../src/components/board-user.component\";\nimport BoardModerator from \"../src/components/board-moderator.component\";\nimport BoardAdmin from \"../src/components/board-admin.component\";\nimport BoardUnlu from \"../src/components/board-unlu.component\";\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.logOut = this.logOut.bind(this);\n\n    this.state = {\n      showModeratorBoard: false,\n      showAdminBoard: false,\n      currentUser: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const user = AuthService.getCurrentUser();\n\n    if (user) {\n      this.setState({\n        currentUser: user,\n        showModeratorBoard: user.roles.includes(\"ROLE_MODERATOR\"),\n        showAdminBoard: user.roles.includes(\"ROLE_ADMIN\"),\n      });\n    }\n  }\n\n  logOut() {\n    AuthService.logout();\n  }\n\n  render() {\n    const { currentUser, showModeratorBoard, showAdminBoard } = this.state;\n\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n          <Link to={\"/\"} className=\"navbar-brand\">\n            VipFal\n          </Link>\n          <div className=\"navbar-nav mr-auto\">\n            {/* <li className=\"nav-item\">\n              <Link to={\"/home\"} className=\"nav-link\">\n                Anasayfa  \n              </Link>\n            </li> */}\n\n            {showModeratorBoard && (\n              <li className=\"nav-item\">\n                <Link to={\"/mod\"} className=\"nav-link\">\n                  Moderator Alanı\n                </Link>\n              </li>\n            )}\n\n            {showAdminBoard && (\n              <li className=\"nav-item\">\n                <Link to={\"/admin\"} className=\"nav-link\">\n                  Admin Alanı\n                </Link>\n              </li>\n            )}\n\n            {/* {currentUser && (\n              <li className=\"nav-item\">\n                <Link to={\"/user\"} className=\"nav-link\">\n                  Kullanıcı\n                </Link>\n              </li>\n            )}\n\n\n                  {currentUser && (\n              <li className=\"nav-item\">\n                <Link to={\"/unlu\"} className=\"nav-link\">\n                  Kullanıcı\n                </Link>\n              </li>\n            )} */}\n          </div>\n\n          {currentUser ? (\n            <div className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/profile\"} className=\"nav-link\">\n                  {currentUser.username}\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <a href=\"/login\" className=\"nav-link\" onClick={this.logOut}>\n                  çıkış\n                </a>\n              </li>\n            </div>\n          ) : (\n            <div className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/login\"} className=\"nav-link\">\n                  Giriş\n                </Link>\n              </li>\n\n              <li className=\"nav-item\">\n                <Link to={\"/register\"} className=\"nav-link\">\n                  Kayıt\n                </Link>\n              </li>\n            </div>\n          )}\n        </nav>\n\n        <div className=\"container mt-3\">\n          <Switch>\n            <Route exact path={[\"/\", \"/home\"]} component={Home} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/profile\" component={Profile} />\n            <Route path=\"/user\" component={BoardUser} />\n            <Route path=\"/mod\" component={BoardModerator} />\n            <Route path=\"/admin\" component={BoardAdmin} />\n            <Route path=\"/unlu\" component={BoardUnlu} />\n\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/*\n \nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport AdminLayout from \"../src/layouts/Admin/Admin.js\";\nimport RTLLayout from \"../src/layouts/RTL/RTL.js\";\n\nimport \"../src/assets/scss/black-dashboard-react.scss\";\nimport \"../src/assets/demo/demo.css\";\nimport \"../src/assets/css/nucleo-icons.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\n\nimport ThemeContextWrapper from \"../src/components/ThemeWrapper/ThemeWrapper\";\nimport BackgroundColorWrapper from \"../src/components/BackgroundColorWrapper/BackgroundColorWrapper\";\n\nReactDOM.render(\n  <ThemeContextWrapper>\n    <BackgroundColorWrapper>\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/admin\" render={(props) => <AdminLayout {...props} />} />\n          <Route path=\"/rtl\" render={(props) => <RTLLayout {...props} />} />\n          <Redirect from=\"/\" to=\"/admin/dashboard\" />\n        </Switch>\n      </BrowserRouter>\n    </BackgroundColorWrapper>\n  </ThemeContextWrapper>,\n  document.getElementById(\"root\")\n\n\n*/\n\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}